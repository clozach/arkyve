#!/usr/bin/env fish

function find_archive_dir -a start_dir
    # First check current directory for Archive/Archives
    for dir in "Archive" "Archives"
        if test -d "$start_dir/$dir"
            echo "$start_dir/$dir"
            return 0
        end
    end

    # Then check parent directory if not in root
    set parent_dir (dirname "$start_dir")
    if test "$parent_dir" != "$start_dir"
        for dir in "Archive" "Archives"
            if test -d "$parent_dir/$dir"
                echo "$parent_dir/$dir"
                return 0
            end
        end
    end

    # If no archive found, create one in current directory
    set archive_dir "$start_dir/Archive"
    mkdir -p "$archive_dir"
    echo "$archive_dir"
    return 0
end

# Check if any file arguments are provided
if test (count $argv) -lt 1
    echo '{"title": "Error", "subtitle": "No files provided", "icon": "⚠️"}'
    exit 1
end

# Process each file
set success_count 0
set total_files (count $argv)
set first_file $argv[1]
set archive_dir (find_archive_dir (dirname (realpath "$first_file")))

for file in $argv
    # Check if file exists
    if not test -f "$file"
        echo "Error: File '$file' not found"
        continue
    end
    
    # Use AppleScript to move the file (makes it undoable)
    set file_path (realpath "$file")
    set archive_path (realpath "$archive_dir")
    
    osascript -e "tell application \"Finder\"" \
              -e "    move POSIX file \"$file_path\" to POSIX file \"$archive_path\" with replacing" \
              -e "end tell" >/dev/null 2>&1
    
    if test $status -eq 0
        set success_count (math $success_count + 1)
    end
end

# Return feedback to LaunchBar
if test $success_count -eq $total_files
    echo "{\"title\": \"✓ Archived\", \"subtitle\": \"$success_count files → $archive_dir\", \"icon\": \"✓\"}"
else
    echo "{\"title\": \"⚠️ Partially Archived\", \"subtitle\": \"$success_count of $total_files files → $archive_dir\", \"icon\": \"⚠️\"}"
end
